setwd(C:/Users/Pavan/Documents/GitHub/PC-ANLY506/Data)
setwd("C:/Users/Pavan/Documents/GitHub/PC-ANLY506/Data")
data <- read.csv("C:/Users/Pavan/Documents/GitHub/PC-ANLY506/Data/gapminder.csv")
table(data$region)
summary(data)
data2 <- data %>%
filter(Year>=1900)
library(dplyr)
data2 <- data %>%
filter(Year>=1900)
summary(data2)
na_count <-sapply(data, function(data) sum(length(which(is.na(data)))))
#Grouping the data by year and computing the number of countries, number of missing values for income and population
missing <- data %>%
group_by(Year) %>%
summarise(
countn = n(),
Income_NAs = sum(is.na(income)),
Population_NAs = sum(is.na(population))
)
#Using ggplot to plot the number of missing values by year for population
ggplot(data = missing) +
geom_point(mapping = aes(x = Year, y = Population_NAs)) + ggtitle("Missing values of population by year")+theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
#Using ggplot to plot the number of missing values by year for population
ggplot(data = missing) +
geom_point(mapping = aes(x = Year, y = Population_NAs)) + ggtitle("Missing values of population by year")+theme(plot.title = element_text(hjust = 0.5))
data2 -> data %>%
group_by(Country)
data2 -> data %>%
group_by(Country) %>%
summarise(Year)
data2 -> data %>%
group_by(Country) %>%
summarise(Year)
data %>%
group_by(Country) %>%
summarise(Year)
data %>%
group_by(Country) %>%
count(Year)
data %>%
group_by(Country, Year) %>%
count(Year)
data %>%
group_by(Country) %>%
summarise(n=Year)
data %>%
group_by(Country, Year) %>%
summarise(TotalCount=n())
data %>%
group_by(Country) %>%
summarise(TotalCount=n())
data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount <> 216)
data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount != 216)
table(data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount != 216))
install.packages("knitr")
install.packages("knitr")
kable(data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount != 216))
library(knitr)
kable(data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount != 216))
library(dplyr)
kable(data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount != 216))
?kable
kable(data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount != 216))
kable(data %>%
group_by(Country) %>%
summarise(TotalCount=n()) %>%
filter(TotalCount < 200))
ggplot(data) +
geom_bar(mapping = aes(x = region))+theme(plot.title = element_text(hjust = 0.5))+ggtitle("Number of observations by region")
library(ggplot2)
ggplot(data) +
geom_bar(mapping = aes(x = region))+theme(plot.title = element_text(hjust = 0.5))+ggtitle("Number of observations by region")
#Data with NAs are first removed before analyzing the data
byregion2 <- na.omit(data) %>%
group_by(Year,region) %>%
summarise(
pop.total = sum(population, na.RM = TRUE))
str(data)
library(tibble)
data <- as.tibble(read.csv("C:/Users/Pavan/Documents/GitHub/PC-ANLY506/Data/gapminder.csv"))
str(data)
data$population <- as.numeric(as.character(data$population))
str(data)
data$Year <- as.factor(data$Year)
str(data)
byregion2 <- na.omit(data) %>%
group_by(Year,region) %>%
summarise(
pop.total = sum(population, na.RM = TRUE))
#Plotting a line plot for each region by year
ggplot(data = byregion2, aes(x = Year, y = pop.total,color = region)) + geom_point()+
geom_smooth(method="loess") + ggtitle("Total population by year & region")+theme(plot.title = element_text(hjust = 0.5))
View(byregion2)
ggplot(byregion2,aes(Year))+geom_line()
ggplot(byregion2,aes(Year,population))+geom_line()
View(byregion2)
ggplot(byregion2,aes(Year,pop.total))+geom_line()
pop.by.year <- data %>% na.omit(data) %>% group_by(Year) %>% summarise(population=sum(population, na.rm = TRUE))
ggplot(pop.by.year, aes(Year,population))+geom_bar()
ggplot(pop.by.year, aes(Year))+geom_bar()
ggplot(pop.by.year, aes(Year,population))+geom_bar(stat = "identity")
View(pop.by.year)
View(data)
data <- read.csv("C:/Users/Pavan/Documents/GitHub/PC-ANLY506/Data/gapminder.csv")
str(data)
data$Year <- as.factor(data$Year)
pop.by.year <- data %>% na.omit(data) %>% group_by(Year) %>% summarise(population=sum(population, na.rm = TRUE))
ggplot(pop.by.year, aes(Year,population))+geom_bar(stat = "identity")
library(scales)
ggplot(pop.by.year, aes(Year,population))+geom_line(stat = "identity")+scale_x_date()
ggplot(pop.by.year, aes(Year,population))+geom_line(stat = "identity")
ggplot(pop.by.year, aes(Year,population))+geom_line()
ggplot(pop.by.year, aes(Year))+geom_line()
ggplot(pop.by.year, aes(Year,population))+geom_line()
ggplot(pop.by.year, aes(Year,population, group=1))+geom_line(stat = "identity")
ggplot(data, aes(x = life, y = income)) +
geom_point()
ggplot(data, aes(x = population, y = life)) + geom_point(color='darkblue') + ggtitle("Population vs Life expectancy")
ggplot(data, aes(x = income, y = life)) + geom_point(color='darkblue') + ggtitle("Life expectancy vs Income")
ggplot(byregion2, aes(Year,population, group=region))+geom_area(stat = "identity")
ggplot(byregion2, aes(Year,pop.total, group=region))+geom_area(stat = "identity")
ggplot(byregion2, aes(Year,pop.total, col=region))+geom_area(stat = "identity")
ggplot(byregion2, aes(Year,pop.total, col=region))+geom_area()
ggplot(data, aes(x=Year, y = life, fill=region))+
geom_boxplot() +
theme(legend.position="top")
ggplot(data[data$Year==2015], aes(x=Year, y = life, fill=region))+
geom_boxplot() +
theme(legend.position="top")
ggplot(data[data$Year==2015,], aes(x=Year, y = life, fill=region))+
geom_boxplot() +
theme(legend.position="top")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse); library(reshape2); library(cluster); library(gridExtra);library(tibble); library(knitr)
data <- read.csv("C:/Users/Pavan/Documents/GitHub/PC-ANLY506/Data/gapminder.csv")
data2015 <- data %>%
filter(Year==2015)
View(data2015)
ggplot(data, aes(x = Year, y = population, color = Country)) +
geom_line() + facet_grid(.~region) + ggtitle("Population by year & region")+ theme(legend.position="none",axis.text.x = element_blank(),plot.title = element_text(hjust = 0.5))
p1d<-aggregate(income ~ life, data2015, median)
p1<-qplot(life, income, data = p1d)
p1
idx<-c("China","United States","India","Japan","Germany","Russia") ##select 6 countries to compare
countries<-data[data$Country %in% idx,]
ggplot(data = countries, aes(x = Year, y = income, color=region)) +
geom_line() + facet_wrap( ~ Country)
ggplot(data = countries, aes(x = Year, y = population)) +
geom_line() + facet_wrap( ~ Country)
ggplot(data, aes(x = Year, y = population)) +
geom_line() + facet_wrap( ~ region)
ggplot(data, aes(x = Year, y = income)) +
geom_line() + facet_wrap( ~ region)
?aggregate
p1d<-aggregate(income ~ life, data2015, median)
View(p1d)
p1<-qplot(life, income, data = p1d)
p1
ggplot(data2015,aes(life,income))+geom_boxplot()
ggplot(data2015,aes(life,income,fill=region))+geom_boxplot()
ggplot(data2015,aes(life,region,fill=region))+geom_boxplot()
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot(median)
?geom_boxplot
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot(stat = "identity")
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()
qplot(life, income, data = p1d)
ggplot(data[data$Year==2015,], aes(x=Year, y = life, fill=region))+
geom_boxplot() +
theme(legend.position="top")
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(name="Fluorescent intensity/arbitrary units", labels = comma)
theme(panel.background = element_blank(), panel.grid = element_blank())
theme(panel.background = element_blank(), panel.grid = element_blank())
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(name="Fluorescent intensity/arbitrary units", labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank())
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(name="Fluorescent intensity/arbitrary units", labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")
library(tibble)
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(region) %>% mutate(is_outlier=ifelse(is_outlier(drat), drat, as.numeric(NA)))
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(region) %>% mutate(is_outlier=ifelse(is_outlier(drat), drat, as.numeric(NA)))
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(region) %>% mutate(is_outlier=ifelse(is_outlier(income), income, as.numeric(NA)))
dat$outlier[which(is.na(dat$is_outlier))] <- as.numeric(NA)
ggplot(data2015,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")+
geom_text(aes(label=outlier),na.rm=TRUE,nudge_y=0.05)
View(dat)
ggplot(dat,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")+
geom_text(aes(label=outlier),na.rm=TRUE,nudge_y=0.05)
View(dat)
ggplot(dat,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")+
geom_text(aes(label=country),na.rm=TRUE,nudge_y=0.05)
ggplot(dat,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")+
geom_text(aes(label=Country),na.rm=TRUE,nudge_y=0.05)
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(region) %>% mutate(is_outlier=ifelse(is_outlier(income), Country, as.numeric(NA)))
View(dat)
dat$outlier[which(is.na(dat$is_outlier))] <- as.numeric(NA)
View(dat)
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(region) %>% mutate(is_outlier=ifelse(is_outlier(income), Country, Country))
dat$outlier[which(is.na(dat$is_outlier))] <- as.numeric(NA)
View(dat)
library(car)
Boxplot(data2015$income~data$region,id.method="data$region")
check_outlier <- function(v, coef=1.5){
quantiles <- quantile(v,probs=c(0.25,0.75))
IQR <- quantiles[2]-quantiles[1]
res <- v < (quantiles[1]-coef*IQR)|v > (quantiles[2]+coef*IQR)
return(res)
}
data2015[,outlier:=check_outlier(income),by=Country]
data2015[,outlier:=check_outlier(income),by=group]
data2015[,outlier:=check_outlier(income)]
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(Country) %>% mutate(is_outlier=ifelse(is_outlier(income), Country, as.numeric(NA)))
dat$outlier[which(is.na(dat$is_outlier))] <- as.numeric(NA)
View(dat)
dat <- data2015 %>% tibble::rownames_to_column(var="outlier") %>% group_by(Country) %>% mutate(is_outlier=ifelse(is_outlier(income), income, as.numeric(NA)))
dat$outlier[which(is.na(dat$is_outlier))] <- as.numeric(NA)
View(dat)
ggplot(dat,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")+
geom_text(aes(label=Country),na.rm=TRUE,nudge_y=0.05)
ggplot(dat,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma)+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")
ggplot(dat,aes(region,income,fill=region))+geom_boxplot()+
labs(title = "GDP per Capita by Region",x="Region",y="GDP per Capita",caption = "Source: Gapminder")+
scale_y_continuous(labels = comma,breaks=seq(0,150000,25000))+
theme(panel.background = element_blank(), panel.grid = element_blank(),legend.position = "none")
